{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as types from \"../types\";\nimport axios from \"axios\";\nexport var updateEnemyHealth = function updateEnemyHealth(_ref) {\n  var enemyID = _ref.enemyID,\n      health = _ref.health,\n      damage = _ref.damage;\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var body;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              body = {\n                enemyID: enemyID,\n                enemyHealth: enemyHealth,\n                damage: damage\n              };\n              console.log(body, 'atck body');\n              _context.next = 4;\n              return axios.put(\"http://localhost:9000/enemies/update/health/\".concat(body.enemyID), body).then(function (res) {\n                dispatch({\n                  type: types.UPDATE_ENEMY_HEALTH,\n                  payload: res.data\n                });\n              })[\"catch\"](function (err) {\n                console.log(err);\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["C:/Users/ernes/Desktop/HomProject/gamex/client/store/Actions/enemyActions.js"],"names":["types","axios","updateEnemyHealth","enemyID","health","damage","dispatch","body","enemyHealth","console","log","put","then","res","type","UPDATE_ENEMY_HEALTH","payload","data","err"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,UAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,MAAEC,OAAF,QAAEA,OAAF;AAAA,MAAWC,MAAX,QAAWA,MAAX;AAAA,MAAmBC,MAAnB,QAAmBA,MAAnB;AAAA;AAAA,yEAAgC,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACvDC,cAAAA,IADuD,GAChD;AACTJ,gBAAAA,OAAO,EAAPA,OADS;AAETK,gBAAAA,WAAW,EAAXA,WAFS;AAGTH,gBAAAA,MAAM,EAANA;AAHS,eADgD;AAMzDI,cAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAAkB,WAAlB;AANyD;AAAA,qBAOvDN,KAAK,CACRU,GADG,uDAE6CJ,IAAI,CAACJ,OAFlD,GAGFI,IAHE,EAKHK,IALG,CAKE,UAACC,GAAD,EAAS;AACbP,gBAAAA,QAAQ,CAAC;AACPQ,kBAAAA,IAAI,EAAEd,KAAK,CAACe,mBADL;AAEJC,kBAAAA,OAAO,EAAEH,GAAG,CAACI;AAFT,iBAAD,CAAR;AAID,eAVG,WAWG,UAACC,GAAD,EAAS;AACVT,gBAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAZ;AACL,eAbG,CAPuD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAhC;;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B","sourcesContent":["import * as types from \"../types\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport const updateEnemyHealth = ({enemyID, health, damage }) => async (dispatch) => {\r\n    const body = {\r\n        enemyID,\r\n        enemyHealth,\r\n        damage,\r\n    };\r\n        console.log(body, 'atck body')\r\n    await axios\r\n      .put(\r\n        `http://localhost:9000/enemies/update/health/${body.enemyID}`,\r\n        body\r\n      )\r\n      .then((res) => {\r\n        dispatch({\r\n          type: types.UPDATE_ENEMY_HEALTH,\r\n             payload: res.data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n            console.log(err);\r\n      });\r\n  };"]},"metadata":{},"sourceType":"module"}