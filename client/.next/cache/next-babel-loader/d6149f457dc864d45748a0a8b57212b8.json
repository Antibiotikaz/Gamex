{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as types from \"../types\";\nimport axios from \"axios\";\nexport var updateEnemyHealth = function updateEnemyHealth(_ref) {\n  var enemyID = _ref.enemyID,\n      enemyHealth = _ref.enemyHealth,\n      damage = _ref.damage;\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var body;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              body = {\n                enemyID: enemyID,\n                enemyHealth: enemyHealth,\n                damage: damage\n              };\n              _context.next = 3;\n              return axios.put(\"http://localhost:9000/enemies/update/health/\".concat(body.enemyID), body).then(function (res) {\n                dispatch({\n                  type: types.UPDATE_ENEMY_HEALTH,\n                  payload: res.data\n                });\n              })[\"catch\"](function (err) {\n                console.log(err);\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var resetEnemyHealth = function resetEnemyHealth(_ref3) {\n  var enemyID = _ref3.enemyID,\n      enemyHealth = _ref3.enemyHealth;\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var body;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              body = {\n                enemyID: enemyID,\n                enemyHealth: enemyHealth\n              };\n              _context2.next = 3;\n              return axios.put(\"http://localhost:9000/enemies/update/health/\".concat(body.enemyID), body).then(function (res) {\n                dispatch({\n                  type: types.ENEMY_STATS_RESET,\n                  payload: res.data\n                });\n              })[\"catch\"](function (err) {\n                console.log(err);\n              });\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["C:/Users/ernes/Desktop/HomProject/gamex/client/store/Actions/enemyActions.js"],"names":["types","axios","updateEnemyHealth","enemyID","enemyHealth","damage","dispatch","body","put","then","res","type","UPDATE_ENEMY_HEALTH","payload","data","err","console","log","resetEnemyHealth","ENEMY_STATS_RESET"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,UAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,MAAEC,OAAF,QAAEA,OAAF;AAAA,MAAWC,WAAX,QAAWA,WAAX;AAAA,MAAwBC,MAAxB,QAAwBA,MAAxB;AAAA;AAAA,yEAAqC,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5DC,cAAAA,IAD4D,GACrD;AACTJ,gBAAAA,OAAO,EAAPA,OADS;AAETC,gBAAAA,WAAW,EAAXA,WAFS;AAGTC,gBAAAA,MAAM,EAANA;AAHS,eADqD;AAAA;AAAA,qBAO5DJ,KAAK,CACRO,GADG,uDAE6CD,IAAI,CAACJ,OAFlD,GAGFI,IAHE,EAKHE,IALG,CAKE,UAACC,GAAD,EAAS;AACbJ,gBAAAA,QAAQ,CAAC;AACPK,kBAAAA,IAAI,EAAEX,KAAK,CAACY,mBADL;AAEJC,kBAAAA,OAAO,EAAEH,GAAG,CAACI;AAFT,iBAAD,CAAR;AAID,eAVG,WAWG,UAACC,GAAD,EAAS;AACVC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACL,eAbG,CAP4D;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAArC;;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;AAuBL,OAAO,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,MAAEf,OAAF,SAAEA,OAAF;AAAA,MAAWC,WAAX,SAAWA,WAAX;AAAA;AAAA,yEAA6B,kBAAOE,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACrDC,cAAAA,IADqD,GAC9C;AACTJ,gBAAAA,OAAO,EAAPA,OADS;AAETC,gBAAAA,WAAW,EAAXA;AAFS,eAD8C;AAAA;AAAA,qBAMrDH,KAAK,CACRO,GADG,uDAE6CD,IAAI,CAACJ,OAFlD,GAGFI,IAHE,EAKHE,IALG,CAKE,UAACC,GAAD,EAAS;AACbJ,gBAAAA,QAAQ,CAAC;AACPK,kBAAAA,IAAI,EAAEX,KAAK,CAACmB,iBADL;AAEJN,kBAAAA,OAAO,EAAEH,GAAG,CAACI;AAFT,iBAAD,CAAR;AAID,eAVG,WAWG,UAACC,GAAD,EAAS;AACVC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACL,eAbG,CANqD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA7B;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB","sourcesContent":["import * as types from \"../types\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport const updateEnemyHealth = ({enemyID, enemyHealth, damage }) => async (dispatch) => {\r\n    const body = {\r\n        enemyID,\r\n        enemyHealth,\r\n        damage,\r\n    };\r\n    \r\n    await axios\r\n      .put(\r\n        `http://localhost:9000/enemies/update/health/${body.enemyID}`,\r\n        body\r\n      )\r\n      .then((res) => {\r\n        dispatch({\r\n          type: types.UPDATE_ENEMY_HEALTH,\r\n             payload: res.data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n            console.log(err);\r\n      });\r\n  };\r\n\r\n  export const resetEnemyHealth = ({enemyID, enemyHealth }) => async (dispatch) => {\r\n    const body = {\r\n        enemyID,\r\n        enemyHealth,\r\n    };\r\n    \r\n    await axios\r\n      .put(\r\n        `http://localhost:9000/enemies/update/health/${body.enemyID}`,\r\n        body\r\n      )\r\n      .then((res) => {\r\n        dispatch({\r\n          type: types.ENEMY_STATS_RESET,\r\n             payload: res.data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n            console.log(err);\r\n      });\r\n  };"]},"metadata":{},"sourceType":"module"}