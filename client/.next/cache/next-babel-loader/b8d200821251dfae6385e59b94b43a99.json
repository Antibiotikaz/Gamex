{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ernes\\\\Desktop\\\\HomProject\\\\gamex\\\\client\\\\pages\\\\arena\\\\index.js\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { attack, spawnEnemy } from \"../../store/Actions/userActions\";\nimport classes from './arena.module.scss';\nimport Navigation from \"../../components/navigation/Navigation\";\nimport StatsTable from '../../components/statsTable/StatsTable';\nimport { updateEnemyHealth } from \"../../store/Actions/enemyActions\";\n\nconst Arena = () => {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const userId = useSelector(state => {\n    var _state$auth, _state$auth$user;\n\n    return (_state$auth = state.auth) === null || _state$auth === void 0 ? void 0 : (_state$auth$user = _state$auth.user) === null || _state$auth$user === void 0 ? void 0 : _state$auth$user.id;\n  });\n  const health = useSelector(state => {\n    var _state$auth2, _state$auth2$user;\n\n    return (_state$auth2 = state.auth) === null || _state$auth2 === void 0 ? void 0 : (_state$auth2$user = _state$auth2.user) === null || _state$auth2$user === void 0 ? void 0 : _state$auth2$user.health;\n  });\n  const isSpawned = useSelector(state => {\n    var _state$enemy;\n\n    return state === null || state === void 0 ? void 0 : (_state$enemy = state.enemy) === null || _state$enemy === void 0 ? void 0 : _state$enemy.isSpawned;\n  });\n  let enemyID = useSelector(state => {\n    var _state$enemy2, _state$enemy2$enemy;\n\n    return state === null || state === void 0 ? void 0 : (_state$enemy2 = state.enemy) === null || _state$enemy2 === void 0 ? void 0 : (_state$enemy2$enemy = _state$enemy2.enemy) === null || _state$enemy2$enemy === void 0 ? void 0 : _state$enemy2$enemy.id;\n  });\n  let enemyHealth = useSelector(state => {\n    var _state$enemy3, _state$enemy3$enemy;\n\n    return state === null || state === void 0 ? void 0 : (_state$enemy3 = state.enemy) === null || _state$enemy3 === void 0 ? void 0 : (_state$enemy3$enemy = _state$enemy3.enemy) === null || _state$enemy3$enemy === void 0 ? void 0 : _state$enemy3$enemy.health;\n  });\n  const enemyDamage = useSelector(state => {\n    var _state$enemy4, _state$enemy4$enemy;\n\n    return state === null || state === void 0 ? void 0 : (_state$enemy4 = state.enemy) === null || _state$enemy4 === void 0 ? void 0 : (_state$enemy4$enemy = _state$enemy4.enemy) === null || _state$enemy4$enemy === void 0 ? void 0 : _state$enemy4$enemy.damage;\n  });\n  const enemyName = useSelector(state => {\n    var _state$enemy5, _state$enemy5$enemy;\n\n    return state === null || state === void 0 ? void 0 : (_state$enemy5 = state.enemy) === null || _state$enemy5 === void 0 ? void 0 : (_state$enemy5$enemy = _state$enemy5.enemy) === null || _state$enemy5$enemy === void 0 ? void 0 : _state$enemy5$enemy.name;\n  });\n  const damage = 5;\n  console.log(enemyHealth, 'health');\n\n  const spawnEnemyClick = () => {\n    let randomEnemy = Math.floor(Math.random() * 2);\n    console.log(randomEnemy, 'random');\n\n    switch (randomEnemy) {\n      case 0:\n        enemyID = \"5f4feb04fe6c9531fb739f09\";\n        return dispatch(spawnEnemy(enemyID));\n\n      case 1:\n        enemyID = \"5f8350b47db530b225987ca7\";\n        return dispatch(spawnEnemy(enemyID));\n\n      default:\n        return console.log('Defaultas');\n    }\n  };\n\n  let body = {\n    userId,\n    health,\n    enemyDamage\n  };\n  let attackData = {\n    enemyID,\n    enemyHealth,\n    damage\n  };\n\n  const beginAttack = () => {\n    enemyHealth -= 5;\n    console.log(attackData, 'attck data');\n    console.log(body);\n    dispatch(attack(body));\n    dispatch(updateEnemyHealth(attackData));\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, __jsx(Navigation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), __jsx(StatsTable, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), isSpawned ? __jsx(\"button\", {\n    onClick: () => beginAttack(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 23\n    }\n  }, \"Attack!\") : null, __jsx(\"button\", {\n    onClick: () => spawnEnemyClick(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, \"Find an enemy!\"), __jsx(\"div\", {\n    className: classes.EnemyBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, \"Enemy table \"), __jsx(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, \"name: \", enemyName), __jsx(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, \"Health: \", enemyHealth), __jsx(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"Damage: \", enemyDamage)));\n};\n\nexport default Arena;","map":{"version":3,"sources":["C:/Users/ernes/Desktop/HomProject/gamex/client/pages/arena/index.js"],"names":["useRouter","React","useDispatch","useSelector","attack","spawnEnemy","classes","Navigation","StatsTable","updateEnemyHealth","Arena","dispatch","router","userId","state","auth","user","id","health","isSpawned","enemy","enemyID","enemyHealth","enemyDamage","damage","enemyName","name","console","log","spawnEnemyClick","randomEnemy","Math","floor","random","body","attackData","beginAttack","EnemyBox"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,iCAAnC;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,SAASC,iBAAT,QAAkC,kCAAlC;;AACA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,MAAM,GAAGZ,SAAS,EAAxB;AACA,QAAMa,MAAM,GAAGV,WAAW,CAAEW,KAAD;AAAA;;AAAA,0BAAWA,KAAK,CAACC,IAAjB,oEAAW,YAAYC,IAAvB,qDAAW,iBAAkBC,EAA7B;AAAA,GAAD,CAA1B;AACA,QAAMC,MAAM,GAAGf,WAAW,CAAEW,KAAD;AAAA;;AAAA,2BAAWA,KAAK,CAACC,IAAjB,sEAAW,aAAYC,IAAvB,sDAAW,kBAAkBE,MAA7B;AAAA,GAAD,CAA1B;AACA,QAAMC,SAAS,GAAGhB,WAAW,CAAEW,KAAD;AAAA;;AAAA,WAAWA,KAAX,aAAWA,KAAX,uCAAWA,KAAK,CAAEM,KAAlB,iDAAW,aAAcD,SAAzB;AAAA,GAAD,CAA7B;AACA,MAAIE,OAAO,GAAGlB,WAAW,CAAEW,KAAD;AAAA;;AAAA,WAAWA,KAAX,aAAWA,KAAX,wCAAWA,KAAK,CAAEM,KAAlB,yEAAW,cAAcA,KAAzB,wDAAW,oBAAqBH,EAAhC;AAAA,GAAD,CAAzB;AACA,MAAIK,WAAW,GAAGnB,WAAW,CAAEW,KAAD;AAAA;;AAAA,WAAWA,KAAX,aAAWA,KAAX,wCAAWA,KAAK,CAAEM,KAAlB,yEAAW,cAAcA,KAAzB,wDAAW,oBAAqBF,MAAhC;AAAA,GAAD,CAA7B;AACA,QAAMK,WAAW,GAAGpB,WAAW,CAAEW,KAAD;AAAA;;AAAA,WAAWA,KAAX,aAAWA,KAAX,wCAAWA,KAAK,CAAEM,KAAlB,yEAAW,cAAcA,KAAzB,wDAAW,oBAAqBI,MAAhC;AAAA,GAAD,CAA/B;AACA,QAAMC,SAAS,GAAGtB,WAAW,CAAEW,KAAD;AAAA;;AAAA,WAAWA,KAAX,aAAWA,KAAX,wCAAWA,KAAK,CAAEM,KAAlB,yEAAW,cAAcA,KAAzB,wDAAW,oBAAqBM,IAAhC;AAAA,GAAD,CAA7B;AAED,QAAMF,MAAM,GAAG,CAAf;AACCG,EAAAA,OAAO,CAACC,GAAR,CAAYN,WAAZ,EAAyB,QAAzB;;AACC,QAAMO,eAAe,GAAG,MAAM;AAC3B,QAAIC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAlB;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYE,WAAZ,EAAyB,QAAzB;;AACA,YAAQA,WAAR;AACE,WAAK,CAAL;AACGT,QAAAA,OAAO,GAAG,0BAAV;AACF,eAAQV,QAAQ,CAACN,UAAU,CAACgB,OAAD,CAAX,CAAhB;;AACD,WAAK,CAAL;AACGA,QAAAA,OAAO,GAAG,0BAAV;AACF,eAAQV,QAAQ,CAACN,UAAU,CAACgB,OAAD,CAAX,CAAhB;;AACC;AACE,eAAOM,OAAO,CAACC,GAAR,CAAY,WAAZ,CAAP;AARN;AAWF,GAdD;;AAiBD,MAAIM,IAAI,GAAG;AACTrB,IAAAA,MADS;AAETK,IAAAA,MAFS;AAGTK,IAAAA;AAHS,GAAX;AAMA,MAAIY,UAAU,GAAG;AACfd,IAAAA,OADe;AAEfC,IAAAA,WAFe;AAGfE,IAAAA;AAHe,GAAjB;;AAMA,QAAMY,WAAW,GAAG,MAAM;AACxBd,IAAAA,WAAW,IAAG,CAAd;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYO,UAAZ,EAAwB,YAAxB;AACER,IAAAA,OAAO,CAACC,GAAR,CAAYM,IAAZ;AACAvB,IAAAA,QAAQ,CAACP,MAAM,CAAC8B,IAAD,CAAP,CAAR;AACAvB,IAAAA,QAAQ,CAACF,iBAAiB,CAAC0B,UAAD,CAAlB,CAAR;AAEH,GAPD;;AAUA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGhB,SAAS,GAAM;AAAQ,IAAA,OAAO,EAAE,MAAKiB,WAAW,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAN,GAA8D,IAH1E,EAIE;AAAQ,IAAA,OAAO,EAAE,MAAKP,eAAe,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,EAME;AAAK,IAAA,SAAS,EAAEvB,OAAO,CAAC+B,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWZ,SAAX,CAFA,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAaH,WAAb,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAaC,WAAb,CAJF,CANF,CADF;AAgBD,CApED;;AAsEA,eAAeb,KAAf","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport  {attack, spawnEnemy}  from \"../../store/Actions/userActions\";\r\nimport classes from './arena.module.scss';\r\nimport Navigation from \"../../components/navigation/Navigation\";\r\nimport StatsTable from '../../components/statsTable/StatsTable';\r\nimport { updateEnemyHealth } from \"../../store/Actions/enemyActions\";\r\nconst Arena = () => {\r\n  const dispatch = useDispatch();\r\n  const router = useRouter();\r\n  const userId = useSelector((state) => state.auth?.user?.id)\r\n  const health = useSelector((state) => state.auth?.user?.health)\r\n  const isSpawned = useSelector((state) => state?.enemy?.isSpawned)\r\n  let enemyID = useSelector((state) => state?.enemy?.enemy?.id);\r\n  let enemyHealth = useSelector((state) => state?.enemy?.enemy?.health)\r\n  const enemyDamage = useSelector((state) => state?.enemy?.enemy?.damage)\r\n  const enemyName = useSelector((state) => state?.enemy?.enemy?.name)\r\n  \r\n const damage = 5\r\n  console.log(enemyHealth, 'health')\r\n   const spawnEnemyClick = () => {\r\n      let randomEnemy = Math.floor(Math.random() * 2);\r\n      console.log(randomEnemy, 'random')\r\n      switch (randomEnemy) {\r\n        case 0:\r\n           enemyID = \"5f4feb04fe6c9531fb739f09\" ;\r\n         return  dispatch(spawnEnemy(enemyID));\r\n        case 1:\r\n           enemyID = \"5f8350b47db530b225987ca7\" ;\r\n         return  dispatch(spawnEnemy(enemyID));\r\n          default:\r\n            return console.log('Defaultas')\r\n      }\r\n    \r\n   }\r\n\r\n\r\n  let body = {\r\n    userId,\r\n    health,\r\n    enemyDamage\r\n  }\r\n\r\n  let attackData = {\r\n    enemyID,\r\n    enemyHealth,\r\n    damage,\r\n  }\r\n\r\n  const beginAttack = () => {\r\n    enemyHealth -=5;\r\n    console.log(attackData, 'attck data')\r\n      console.log(body)\r\n      dispatch(attack(body));\r\n      dispatch(updateEnemyHealth(attackData));\r\n    \r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Navigation />\r\n      <StatsTable/>\r\n      {isSpawned ?    <button onClick={() =>beginAttack()}>Attack!</button> : null}\r\n      <button onClick={() =>spawnEnemyClick()}>Find an enemy!</button>\r\n\r\n      <div className={classes.EnemyBox}>\r\n      <h2>Enemy table </h2>\r\n      <h5>name: {enemyName}</h5>\r\n        <h5>Health: {enemyHealth}</h5>\r\n        <h5>Damage: {enemyDamage}</h5>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Arena;\r\n"]},"metadata":{},"sourceType":"module"}