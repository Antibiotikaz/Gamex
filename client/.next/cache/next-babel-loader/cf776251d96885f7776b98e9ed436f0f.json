{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ernes\\\\Desktop\\\\HomProject\\\\gamex\\\\client\\\\pages\\\\arena\\\\index.js\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { attack, spawnEnemy } from \"../../store/Actions/userActions\";\nimport Navigation from \"../../components/navigation/Navigation\";\nimport StatsTable from '../../components/statsTable/StatsTable';\n\nconst Arena = () => {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const userId = useSelector(state => {\n    var _state$auth, _state$auth$user;\n\n    return (_state$auth = state.auth) === null || _state$auth === void 0 ? void 0 : (_state$auth$user = _state$auth.user) === null || _state$auth$user === void 0 ? void 0 : _state$auth$user.id;\n  });\n  const health = useSelector(state => {\n    var _state$auth2, _state$auth2$user;\n\n    return (_state$auth2 = state.auth) === null || _state$auth2 === void 0 ? void 0 : (_state$auth2$user = _state$auth2.user) === null || _state$auth2$user === void 0 ? void 0 : _state$auth2$user.health;\n  });\n  const isSpawned = useSelector(state => {\n    var _state$enemy;\n\n    return state === null || state === void 0 ? void 0 : (_state$enemy = state.enemy) === null || _state$enemy === void 0 ? void 0 : _state$enemy.isSpawned;\n  });\n  const enemyID = \"5f4feb04fe6c9531fb739f09\";\n  const enemyHealth = useSelector(state => {\n    var _state$enemy2, _state$enemy2$enemy;\n\n    return state === null || state === void 0 ? void 0 : (_state$enemy2 = state.enemy) === null || _state$enemy2 === void 0 ? void 0 : (_state$enemy2$enemy = _state$enemy2.enemy) === null || _state$enemy2$enemy === void 0 ? void 0 : _state$enemy2$enemy.health;\n  });\n  const enemyDamage = useSelector(state => {\n    var _state$enemy3, _state$enemy3$enemy;\n\n    return state === null || state === void 0 ? void 0 : (_state$enemy3 = state.enemy) === null || _state$enemy3 === void 0 ? void 0 : (_state$enemy3$enemy = _state$enemy3.enemy) === null || _state$enemy3$enemy === void 0 ? void 0 : _state$enemy3$enemy.damage;\n  });\n  console.log(enemyDamage);\n\n  const spawnEnemyClick = () => {\n    let randomEnemy = Math.floor(Math.random() * 1);\n    console.log(randomEnemy, 'random'); // switch (randomEnemy) {\n    //   case 0\n    // }\n\n    dispatch(spawnEnemy(enemyID));\n  };\n\n  let body = {\n    userId,\n    health,\n    enemyDamage\n  };\n\n  const beginAttack = () => {\n    console.log(body);\n    dispatch(attack(body));\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, __jsx(Navigation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), __jsx(StatsTable, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), isSpawned ? __jsx(\"button\", {\n    onClick: () => beginAttack(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 23\n    }\n  }, \"Attack!\") : null, __jsx(\"button\", {\n    onClick: () => spawnEnemyClick(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Find an enemy!\"));\n};\n\nexport default Arena;","map":{"version":3,"sources":["C:/Users/ernes/Desktop/HomProject/gamex/client/pages/arena/index.js"],"names":["useRouter","React","useDispatch","useSelector","attack","spawnEnemy","Navigation","StatsTable","Arena","dispatch","router","userId","state","auth","user","id","health","isSpawned","enemy","enemyID","enemyHealth","enemyDamage","damage","console","log","spawnEnemyClick","randomEnemy","Math","floor","random","body","beginAttack"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,iCAAnC;AAEA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;;AACA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,MAAM,GAAGV,SAAS,EAAxB;AACA,QAAMW,MAAM,GAAGR,WAAW,CAAES,KAAD;AAAA;;AAAA,0BAAWA,KAAK,CAACC,IAAjB,oEAAW,YAAYC,IAAvB,qDAAW,iBAAkBC,EAA7B;AAAA,GAAD,CAA1B;AACA,QAAMC,MAAM,GAAGb,WAAW,CAAES,KAAD;AAAA;;AAAA,2BAAWA,KAAK,CAACC,IAAjB,sEAAW,aAAYC,IAAvB,sDAAW,kBAAkBE,MAA7B;AAAA,GAAD,CAA1B;AACA,QAAMC,SAAS,GAAGd,WAAW,CAAES,KAAD;AAAA;;AAAA,WAAWA,KAAX,aAAWA,KAAX,uCAAWA,KAAK,CAAEM,KAAlB,iDAAW,aAAcD,SAAzB;AAAA,GAAD,CAA7B;AACA,QAAME,OAAO,GAAG,0BAAhB;AACA,QAAMC,WAAW,GAAGjB,WAAW,CAAES,KAAD;AAAA;;AAAA,WAAWA,KAAX,aAAWA,KAAX,wCAAWA,KAAK,CAAEM,KAAlB,yEAAW,cAAcA,KAAzB,wDAAW,oBAAqBF,MAAhC;AAAA,GAAD,CAA/B;AACA,QAAMK,WAAW,GAAGlB,WAAW,CAAES,KAAD;AAAA;;AAAA,WAAWA,KAAX,aAAWA,KAAX,wCAAWA,KAAK,CAAEM,KAAlB,yEAAW,cAAcA,KAAzB,wDAAW,oBAAqBI,MAAhC;AAAA,GAAD,CAA/B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;;AAEC,QAAMI,eAAe,GAAG,MAAM;AAC3B,QAAIC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAlB;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYE,WAAZ,EAAyB,QAAzB,EAF2B,CAG3B;AACA;AACA;;AACAjB,IAAAA,QAAQ,CAACJ,UAAU,CAACc,OAAD,CAAX,CAAR;AACF,GAPD;;AAUD,MAAIW,IAAI,GAAG;AACTnB,IAAAA,MADS;AAETK,IAAAA,MAFS;AAGTK,IAAAA;AAHS,GAAX;;AAMA,QAAMU,WAAW,GAAG,MAAM;AAEtBR,IAAAA,OAAO,CAACC,GAAR,CAAYM,IAAZ;AACArB,IAAAA,QAAQ,CAACL,MAAM,CAAC0B,IAAD,CAAP,CAAR;AAEH,GALD;;AAQA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGb,SAAS,GAAM;AAAQ,IAAA,OAAO,EAAE,MAAKc,WAAW,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAN,GAA8D,IAH1E,EAIE;AAAQ,IAAA,OAAO,EAAE,MAAKN,eAAe,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,CADF;AAQD,CA3CD;;AA6CA,eAAejB,KAAf","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport  {attack, spawnEnemy}  from \"../../store/Actions/userActions\";\r\n\r\nimport Navigation from \"../../components/navigation/Navigation\";\r\nimport StatsTable from '../../components/statsTable/StatsTable';\r\nconst Arena = () => {\r\n  const dispatch = useDispatch();\r\n  const router = useRouter();\r\n  const userId = useSelector((state) => state.auth?.user?.id)\r\n  const health = useSelector((state) => state.auth?.user?.health)\r\n  const isSpawned = useSelector((state) => state?.enemy?.isSpawned)\r\n  const enemyID = \"5f4feb04fe6c9531fb739f09\" ;\r\n  const enemyHealth = useSelector((state) => state?.enemy?.enemy?.health)\r\n  const enemyDamage = useSelector((state) => state?.enemy?.enemy?.damage)\r\n  console.log(enemyDamage)\r\n\r\n   const spawnEnemyClick = () => {\r\n      let randomEnemy = Math.floor(Math.random() * 1);\r\n      console.log(randomEnemy, 'random')\r\n      // switch (randomEnemy) {\r\n      //   case 0\r\n      // }\r\n      dispatch(spawnEnemy(enemyID));\r\n   }\r\n\r\n\r\n  let body = {\r\n    userId,\r\n    health,\r\n    enemyDamage\r\n  }\r\n\r\n  const beginAttack = () => {\r\n      \r\n      console.log(body)\r\n      dispatch(attack(body));\r\n    \r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Navigation />\r\n      <StatsTable/>\r\n      {isSpawned ?    <button onClick={() =>beginAttack()}>Attack!</button> : null}\r\n      <button onClick={() =>spawnEnemyClick()}>Find an enemy!</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Arena;\r\n"]},"metadata":{},"sourceType":"module"}