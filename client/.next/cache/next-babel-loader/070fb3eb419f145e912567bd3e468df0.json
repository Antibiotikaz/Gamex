{"ast":null,"code":"import * as types from \"../types\";\nimport axios from \"axios\";\nexport const attack = ({\n  userId,\n  health,\n  enemyDamage\n}) => async dispatch => {\n  const body = {\n    userId,\n    health,\n    enemyDamage\n  };\n  await axios.get(`http://localhost:9000/users/attack/${body.userId}`).then(res => {\n    dispatch({\n      type: types.USER_DATA_AFTER_ATTACK,\n      payload: res.data\n    });\n  }).then(() => {\n    axios.put(`http://localhost:9000/users/attack/${body.userId}`, body).then(res => {\n      dispatch({\n        type: types.USER_UPDATES_HEALTH,\n        payload: res.data\n      });\n    }).then(() => {\n      axios.get(`http://localhost:9000/users/attack/${body.userId}`).then(res => {\n        dispatch({\n          type: types.USER_DATA_AFTER_ATTACK,\n          payload: res.data\n        });\n      });\n    });\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const spawnEnemy = enemyID => async dispatch => {\n  const body = {\n    enemyID\n  };\n  await axios.get(`http://localhost:9000/enemies/spawn/${body.enemyID}`, body).then(res => {\n    dispatch({\n      type: types.ENEMY_SPAWNED,\n      payload: res.data\n    });\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const getWeather = () => async dispatch => {\n  await axios.get(`http://api.openweathermap.org/data/2.5/weather?id=598098&appid=b5516378bf01a1077c5f71323ba950ac&units=metric`).then(res => {\n    dispatch({\n      type: types.GET_WEATHER,\n      payload: res.data\n    });\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const wonBattle = ({\n  enemyID,\n  userId\n}) => async dispatch => {\n  const body = {\n    enemyID,\n    userId\n  };\n  await axios.put(`http://localhost:9000/users/won/${body.userId}`, body).then(res => {\n    dispatch({\n      type: types.NEW_STATS_AFTER_BATTLE,\n      payload: res.data\n    });\n  }).catch(err => {\n    console.log(err);\n  });\n};","map":{"version":3,"sources":["C:/Users/ernes/Desktop/HomProject/gamex/client/store/Actions/userActions.js"],"names":["types","axios","attack","userId","health","enemyDamage","dispatch","body","get","then","res","type","USER_DATA_AFTER_ATTACK","payload","data","put","USER_UPDATES_HEALTH","catch","err","console","log","spawnEnemy","enemyID","ENEMY_SPAWNED","getWeather","GET_WEATHER","wonBattle","NEW_STATS_AFTER_BATTLE"],"mappings":"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","sourcesContent":["import * as types from \"../types\";\r\nimport axios from \"axios\";\r\n\r\nexport const attack = ({ userId, health, enemyDamage }) => async (dispatch) => {\r\n  const body = {\r\n    userId,\r\n    health,\r\n    enemyDamage,\r\n  };\r\n  await axios\r\n  .get(`http://localhost:9000/users/attack/${body.userId}`)\r\n  .then((res) => {\r\n    dispatch({\r\n      type: types.USER_DATA_AFTER_ATTACK,\r\n      payload: res.data,\r\n    });\r\n  })\r\n  .then(() => {\r\n     axios\r\n    .put(`http://localhost:9000/users/attack/${body.userId}`, body)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: types.USER_UPDATES_HEALTH,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .then(() => {\r\n      axios\r\n        .get(`http://localhost:9000/users/attack/${body.userId}`)\r\n        .then((res) => {\r\n          dispatch({\r\n            type: types.USER_DATA_AFTER_ATTACK,\r\n            payload: res.data,\r\n          });\r\n        });\r\n    })\r\n  })\r\n  \r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const spawnEnemy = (enemyID) => async (dispatch) => {\r\n  const body = {\r\n    enemyID,\r\n  };\r\n  await axios\r\n    .get(`http://localhost:9000/enemies/spawn/${body.enemyID}`, body)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: types.ENEMY_SPAWNED,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const getWeather = () => async (dispatch) => {\r\n  await axios\r\n    .get(\r\n      `http://api.openweathermap.org/data/2.5/weather?id=598098&appid=b5516378bf01a1077c5f71323ba950ac&units=metric`\r\n    )\r\n    .then((res) => {\r\n      dispatch({\r\n        type: types.GET_WEATHER,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const wonBattle = ({enemyID, userId}) => async (dispatch) => {\r\n  const body = {\r\n    enemyID,\r\n    userId,\r\n  };\r\n  await axios\r\n    .put(`http://localhost:9000/users/won/${body.userId}`, body)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: types.NEW_STATS_AFTER_BATTLE,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}