{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ernes\\\\Desktop\\\\HomProject\\\\gamex\\\\client\\\\pages\\\\arena\\\\index.js\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { attack, spawnEnemy } from \"../../store/Actions/userActions\";\nimport classes from \"./arena.module.scss\";\nimport Navigation from \"../../components/navigation/Navigation\";\nimport StatsTable from \"../../components/statsTable/StatsTable\";\nimport { updateEnemyHealth } from \"../../store/Actions/enemyActions\";\nimport Swal from \"sweetalert2\";\nimport GoblinImg from \"../../components/assets/images/goblin.png\";\nimport OrcImg from \"../../components/assets/images/orc.png\";\n\nconst Arena = () => {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const userId = useSelector(state => {\n    var _state$auth, _state$auth$user;\n\n    return (_state$auth = state.auth) === null || _state$auth === void 0 ? void 0 : (_state$auth$user = _state$auth.user) === null || _state$auth$user === void 0 ? void 0 : _state$auth$user.id;\n  });\n  const health = useSelector(state => {\n    var _state$auth2, _state$auth2$user;\n\n    return (_state$auth2 = state.auth) === null || _state$auth2 === void 0 ? void 0 : (_state$auth2$user = _state$auth2.user) === null || _state$auth2$user === void 0 ? void 0 : _state$auth2$user.health;\n  });\n  const isSpawned = useSelector(state => {\n    var _state$enemy;\n\n    return state === null || state === void 0 ? void 0 : (_state$enemy = state.enemy) === null || _state$enemy === void 0 ? void 0 : _state$enemy.isSpawned;\n  });\n  let enemyID = useSelector(state => {\n    var _state$enemy2, _state$enemy2$enemy;\n\n    return state === null || state === void 0 ? void 0 : (_state$enemy2 = state.enemy) === null || _state$enemy2 === void 0 ? void 0 : (_state$enemy2$enemy = _state$enemy2.enemy) === null || _state$enemy2$enemy === void 0 ? void 0 : _state$enemy2$enemy.id;\n  });\n  let enemyHealth = useSelector(state => {\n    var _state$enemy3, _state$enemy3$enemy;\n\n    return state === null || state === void 0 ? void 0 : (_state$enemy3 = state.enemy) === null || _state$enemy3 === void 0 ? void 0 : (_state$enemy3$enemy = _state$enemy3.enemy) === null || _state$enemy3$enemy === void 0 ? void 0 : _state$enemy3$enemy.health;\n  });\n  const enemyDamage = useSelector(state => {\n    var _state$enemy4, _state$enemy4$enemy;\n\n    return state === null || state === void 0 ? void 0 : (_state$enemy4 = state.enemy) === null || _state$enemy4 === void 0 ? void 0 : (_state$enemy4$enemy = _state$enemy4.enemy) === null || _state$enemy4$enemy === void 0 ? void 0 : _state$enemy4$enemy.damage;\n  });\n  const enemyName = useSelector(state => {\n    var _state$enemy5, _state$enemy5$enemy;\n\n    return state === null || state === void 0 ? void 0 : (_state$enemy5 = state.enemy) === null || _state$enemy5 === void 0 ? void 0 : (_state$enemy5$enemy = _state$enemy5.enemy) === null || _state$enemy5$enemy === void 0 ? void 0 : _state$enemy5$enemy.name;\n  });\n  const damage = 5;\n  console.log(enemyHealth, \"health\");\n\n  const spawnEnemyClick = () => {\n    let randomEnemy = Math.floor(Math.random() * 2);\n    console.log(randomEnemy, \"random\");\n\n    switch (randomEnemy) {\n      case 0:\n        enemyID = \"5f4feb04fe6c9531fb739f09\";\n        return dispatch(spawnEnemy(enemyID));\n\n      case 1:\n        enemyID = \"5f8350b47db530b225987ca7\";\n        return dispatch(spawnEnemy(enemyID));\n\n      default:\n        return console.log(\"Defaultas\");\n    }\n  };\n\n  let body = {\n    userId,\n    health,\n    enemyDamage\n  };\n  let attackData = {\n    enemyID,\n    enemyHealth,\n    damage\n  };\n\n  const beginAttack = () => {\n    dispatch(attack(body));\n    dispatch(updateEnemyHealth(attackData));\n\n    if (enemyHealth === 0) {\n      Swal.fire({\n        title: \"You won hero!\",\n        text: `${enemyName} was killed`,\n        confirmButtonText: '<i class=\"fa fa-thumbs-up\"></i> Go back to town!',\n        imageUrl: \"https://unsplash.it/400/200\",\n        imageWidth: 400,\n        imageHeight: 200,\n        imageAlt: \"Custom image\"\n      }).then(result => {\n        if (result.isConfirmed) {\n          router.reload();\n        }\n      });\n    }\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, __jsx(Navigation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), __jsx(StatsTable, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }), isSpawned ? __jsx(\"button\", {\n    onClick: () => beginAttack(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Attack!\") : null, __jsx(\"button\", {\n    onClick: () => spawnEnemyClick(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, \"Find an enemy!\"), __jsx(\"div\", {\n    className: classes.EnemyBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, \"Enemy table \"), __jsx(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, \"name: \", enemyName), __jsx(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, \"Health: \", enemyHealth), __jsx(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, \"Damage: \", enemyDamage)), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, enemyName === \"Goblin\" ? __jsx(\"img\", {\n    src: GoblinImg,\n    alt: \"Goblin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }) : __jsx(\"img\", {\n    src: OrcImg,\n    alt: \"Orc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default Arena;","map":{"version":3,"sources":["C:/Users/ernes/Desktop/HomProject/gamex/client/pages/arena/index.js"],"names":["useRouter","React","useDispatch","useSelector","attack","spawnEnemy","classes","Navigation","StatsTable","updateEnemyHealth","Swal","GoblinImg","OrcImg","Arena","dispatch","router","userId","state","auth","user","id","health","isSpawned","enemy","enemyID","enemyHealth","enemyDamage","damage","enemyName","name","console","log","spawnEnemyClick","randomEnemy","Math","floor","random","body","attackData","beginAttack","fire","title","text","confirmButtonText","imageUrl","imageWidth","imageHeight","imageAlt","then","result","isConfirmed","reload","EnemyBox"],"mappings":"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","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { attack, spawnEnemy } from \"../../store/Actions/userActions\";\r\nimport classes from \"./arena.module.scss\";\r\nimport Navigation from \"../../components/navigation/Navigation\";\r\nimport StatsTable from \"../../components/statsTable/StatsTable\";\r\nimport { updateEnemyHealth } from \"../../store/Actions/enemyActions\";\r\nimport Swal from \"sweetalert2\";\r\nimport GoblinImg from \"../../components/assets/images/goblin.png\";\r\nimport OrcImg from \"../../components/assets/images/orc.png\";\r\nconst Arena = () => {\r\n  const dispatch = useDispatch();\r\n  const router = useRouter();\r\n  const userId = useSelector((state) => state.auth?.user?.id);\r\n  const health = useSelector((state) => state.auth?.user?.health);\r\n  const isSpawned = useSelector((state) => state?.enemy?.isSpawned);\r\n  let enemyID = useSelector((state) => state?.enemy?.enemy?.id);\r\n  let enemyHealth = useSelector((state) => state?.enemy?.enemy?.health);\r\n  const enemyDamage = useSelector((state) => state?.enemy?.enemy?.damage);\r\n  const enemyName = useSelector((state) => state?.enemy?.enemy?.name);\r\n\r\n  const damage = 5;\r\n  console.log(enemyHealth, \"health\");\r\n  const spawnEnemyClick = () => {\r\n    let randomEnemy = Math.floor(Math.random() * 2);\r\n    console.log(randomEnemy, \"random\");\r\n    switch (randomEnemy) {\r\n      case 0:\r\n        enemyID = \"5f4feb04fe6c9531fb739f09\";\r\n        return dispatch(spawnEnemy(enemyID));\r\n      case 1:\r\n        enemyID = \"5f8350b47db530b225987ca7\";\r\n        return dispatch(spawnEnemy(enemyID));\r\n      default:\r\n        return console.log(\"Defaultas\");\r\n    }\r\n  };\r\n\r\n  let body = {\r\n    userId,\r\n    health,\r\n    enemyDamage,\r\n  };\r\n\r\n  let attackData = {\r\n    enemyID,\r\n    enemyHealth,\r\n    damage,\r\n  };\r\n\r\n  const beginAttack = () => {\r\n    dispatch(attack(body));\r\n    dispatch(updateEnemyHealth(attackData));\r\n    if (enemyHealth === 0) {\r\n      Swal.fire({\r\n        title: \"You won hero!\",\r\n        text: `${enemyName} was killed`,\r\n        confirmButtonText: '<i class=\"fa fa-thumbs-up\"></i> Go back to town!',\r\n        imageUrl: \"https://unsplash.it/400/200\",\r\n        imageWidth: 400,\r\n        imageHeight: 200,\r\n        imageAlt: \"Custom image\",\r\n      }).then((result) => {\r\n        if (result.isConfirmed) {\r\n          router.reload();\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navigation />\r\n      <StatsTable />\r\n      {isSpawned ? (\r\n        <button onClick={() => beginAttack()}>Attack!</button>\r\n      ) : null}\r\n      <button onClick={() => spawnEnemyClick()}>Find an enemy!</button>\r\n\r\n      <div className={classes.EnemyBox}>\r\n        <div>\r\n          <h2>Enemy table </h2>\r\n          <h5>name: {enemyName}</h5>\r\n          <h5>Health: {enemyHealth}</h5>\r\n          <h5>Damage: {enemyDamage}</h5>\r\n        </div>\r\n        <div>\r\n          {enemyName === \"Goblin\" ? (\r\n            <img src={GoblinImg} alt=\"Goblin\" />\r\n          ) : (\r\n            <img src={OrcImg} alt=\"Orc\" />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Arena;\r\n"]},"metadata":{},"sourceType":"module"}