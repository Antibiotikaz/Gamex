{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ernes\\\\Desktop\\\\HomProject\\\\gamex\\\\client\\\\pages\\\\arena\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { attack, spawnEnemy, wonBattle } from \"../../store/Actions/userActions\";\nimport classes from \"./arena.module.scss\";\nimport Navigation from \"../../components/navigation/Navigation\";\nimport StatsTable from \"../../components/statsTable/StatsTable\";\nimport { updateEnemyHealth } from \"../../store/Actions/enemyActions\";\nimport Swal from \"sweetalert2\";\nimport GoblinImg from \"../../components/assets/images/goblin.png\";\nimport OrcImg from \"../../components/assets/images/orc.png\";\n\nvar Arena = function Arena() {\n  _s();\n\n  var dispatch = useDispatch();\n  var router = useRouter();\n  var userId = useSelector(function (state) {\n    var _state$auth, _state$auth$user;\n\n    return (_state$auth = state.auth) === null || _state$auth === void 0 ? void 0 : (_state$auth$user = _state$auth.user) === null || _state$auth$user === void 0 ? void 0 : _state$auth$user.id;\n  });\n  var health = useSelector(function (state) {\n    var _state$auth2, _state$auth2$user;\n\n    return (_state$auth2 = state.auth) === null || _state$auth2 === void 0 ? void 0 : (_state$auth2$user = _state$auth2.user) === null || _state$auth2$user === void 0 ? void 0 : _state$auth2$user.health;\n  });\n  var email = useSelector(function (state) {\n    var _state$auth3, _state$auth3$user;\n\n    return (_state$auth3 = state.auth) === null || _state$auth3 === void 0 ? void 0 : (_state$auth3$user = _state$auth3.user) === null || _state$auth3$user === void 0 ? void 0 : _state$auth3$user.email;\n  });\n  var userExp = useSelector(function (state) {\n    var _state$auth4, _state$auth4$user;\n\n    return (_state$auth4 = state.auth) === null || _state$auth4 === void 0 ? void 0 : (_state$auth4$user = _state$auth4.user) === null || _state$auth4$user === void 0 ? void 0 : _state$auth4$user.experience;\n  });\n  var isSpawned = useSelector(function (state) {\n    var _state$enemy;\n\n    return state === null || state === void 0 ? void 0 : (_state$enemy = state.enemy) === null || _state$enemy === void 0 ? void 0 : _state$enemy.isSpawned;\n  });\n  var enemyID = useSelector(function (state) {\n    var _state$enemy2, _state$enemy2$enemy;\n\n    return state === null || state === void 0 ? void 0 : (_state$enemy2 = state.enemy) === null || _state$enemy2 === void 0 ? void 0 : (_state$enemy2$enemy = _state$enemy2.enemy) === null || _state$enemy2$enemy === void 0 ? void 0 : _state$enemy2$enemy.id;\n  });\n  var enemyHealth = useSelector(function (state) {\n    var _state$enemy3, _state$enemy3$enemy;\n\n    return state === null || state === void 0 ? void 0 : (_state$enemy3 = state.enemy) === null || _state$enemy3 === void 0 ? void 0 : (_state$enemy3$enemy = _state$enemy3.enemy) === null || _state$enemy3$enemy === void 0 ? void 0 : _state$enemy3$enemy.health;\n  });\n  var enemyDamage = useSelector(function (state) {\n    var _state$enemy4, _state$enemy4$enemy;\n\n    return state === null || state === void 0 ? void 0 : (_state$enemy4 = state.enemy) === null || _state$enemy4 === void 0 ? void 0 : (_state$enemy4$enemy = _state$enemy4.enemy) === null || _state$enemy4$enemy === void 0 ? void 0 : _state$enemy4$enemy.damage;\n  });\n  var enemyName = useSelector(function (state) {\n    var _state$enemy5, _state$enemy5$enemy;\n\n    return state === null || state === void 0 ? void 0 : (_state$enemy5 = state.enemy) === null || _state$enemy5 === void 0 ? void 0 : (_state$enemy5$enemy = _state$enemy5.enemy) === null || _state$enemy5$enemy === void 0 ? void 0 : _state$enemy5$enemy.name;\n  });\n  var damage = 10000;\n\n  var spawnEnemyClick = function spawnEnemyClick() {\n    var randomEnemy = Math.floor(Math.random() * 2);\n    console.log(randomEnemy, \"random\");\n\n    switch (randomEnemy) {\n      case 0:\n        enemyID = \"5f4feb04fe6c9531fb739f09\";\n        return dispatch(spawnEnemy(enemyID));\n\n      case 1:\n        enemyID = \"5f8350b47db530b225987ca7\";\n        return dispatch(spawnEnemy(enemyID));\n\n      default:\n        return console.log(\"Defaultas\");\n    }\n  };\n\n  var body = {\n    userId: userId,\n    health: health,\n    enemyDamage: enemyDamage\n  };\n  var attackData = {\n    enemyID: enemyID,\n    enemyHealth: enemyHealth,\n    damage: damage\n  };\n\n  var beginAttack = function beginAttack() {\n    dispatch(attack(body));\n    dispatch(updateEnemyHealth(attackData));\n\n    if (enemyHealth <= 0) {\n      var battleStatBody = {\n        enemyID: enemyID,\n        userId: userId\n      };\n      dispatch(wonBattle(battleStatBody));\n      Swal.fire({\n        title: \"You won hero!\",\n        text: \"\".concat(enemyName, \" was killed\"),\n        confirmButtonText: '<i class=\"fa fa-thumbs-up\"></i> Go back to town!',\n        imageUrl: \"https://unsplash.it/400/200\",\n        imageWidth: 400,\n        imageHeight: 200,\n        imageAlt: \"Custom image\"\n      }).then(function (result) {\n        if (result.isConfirmed) {\n          router.reload();\n        }\n      });\n    } else if (health <= 0) {\n      console.log(health, 'userHealth');\n      Swal.fire({\n        title: \"You are dead heroe!\",\n        text: \"\".concat(email, \", was brutaly wounded and got into hospital\"),\n        confirmButtonText: '<i class=\"fa fa-thumbs-up\"></i> Go back to town!',\n        imageUrl: \"https://unsplash.it/400/200\",\n        imageWidth: 400,\n        imageHeight: 200,\n        imageAlt: \"Custom image\"\n      }).then(function (result) {\n        if (result.isConfirmed) {\n          router.reload();\n        }\n      });\n    }\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, __jsx(Navigation, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }), __jsx(StatsTable, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }), isSpawned ? __jsx(\"button\", {\n    onClick: function onClick() {\n      return beginAttack();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, \"Attack!\") : null, __jsx(\"button\", {\n    onClick: function onClick() {\n      return spawnEnemyClick();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, \"Find an enemy!\"), __jsx(\"div\", {\n    className: classes.EnemyBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, \"Enemy table \"), __jsx(\"h5\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, \"name: \", enemyName), __jsx(\"h5\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, \"Health:\", enemyHealth <= 0 ? 0 : enemyHealth, \" \"), __jsx(\"h5\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, \"Damage: \", enemyDamage)), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, enemyName === \"Goblin\" ? __jsx(\"img\", {\n    src: GoblinImg,\n    alt: \"Goblin\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }) : __jsx(\"img\", {\n    src: OrcImg,\n    alt: \"Orc\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }))));\n};\n\n_s(Arena, \"ueB+R5SQddygXRI/nd8SbYZQlvU=\", false, function () {\n  return [useDispatch, useRouter, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Arena;\nexport default Arena;\n\nvar _c;\n\n$RefreshReg$(_c, \"Arena\");","map":{"version":3,"sources":["C:/Users/ernes/Desktop/HomProject/gamex/client/pages/arena/index.js"],"names":["useRouter","React","useDispatch","useSelector","attack","spawnEnemy","wonBattle","classes","Navigation","StatsTable","updateEnemyHealth","Swal","GoblinImg","OrcImg","Arena","dispatch","router","userId","state","auth","user","id","health","email","userExp","experience","isSpawned","enemy","enemyID","enemyHealth","enemyDamage","damage","enemyName","name","spawnEnemyClick","randomEnemy","Math","floor","random","console","log","body","attackData","beginAttack","battleStatBody","fire","title","text","confirmButtonText","imageUrl","imageWidth","imageHeight","imageAlt","then","result","isConfirmed","reload","EnemyBox"],"mappings":"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","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { attack, spawnEnemy, wonBattle } from \"../../store/Actions/userActions\";\r\nimport classes from \"./arena.module.scss\";\r\nimport Navigation from \"../../components/navigation/Navigation\";\r\nimport StatsTable from \"../../components/statsTable/StatsTable\";\r\nimport { updateEnemyHealth } from \"../../store/Actions/enemyActions\";\r\nimport Swal from \"sweetalert2\";\r\nimport GoblinImg from \"../../components/assets/images/goblin.png\";\r\nimport OrcImg from \"../../components/assets/images/orc.png\";\r\nconst Arena = () => {\r\n  const dispatch = useDispatch();\r\n  const router = useRouter();\r\n  const userId = useSelector((state) => state.auth?.user?.id);\r\n  const health = useSelector((state) => state.auth?.user?.health);\r\n  const email = useSelector((state) => state.auth?.user?.email);\r\n  const userExp = useSelector((state) => state.auth?.user?.experience);\r\n  const isSpawned = useSelector((state) => state?.enemy?.isSpawned);\r\n  let enemyID = useSelector((state) => state?.enemy?.enemy?.id);\r\n  let enemyHealth = useSelector((state) => state?.enemy?.enemy?.health);\r\n  const enemyDamage = useSelector((state) => state?.enemy?.enemy?.damage);\r\n  const enemyName = useSelector((state) => state?.enemy?.enemy?.name);\r\n\r\n  const damage = 10000;\r\n\r\n  const spawnEnemyClick = () => {\r\n    let randomEnemy = Math.floor(Math.random() * 2);\r\n    console.log(randomEnemy, \"random\");\r\n    switch (randomEnemy) {\r\n      case 0:\r\n        enemyID = \"5f4feb04fe6c9531fb739f09\";\r\n        return dispatch(spawnEnemy(enemyID));\r\n      case 1:\r\n        enemyID = \"5f8350b47db530b225987ca7\";\r\n        return dispatch(spawnEnemy(enemyID));\r\n      default:\r\n        return console.log(\"Defaultas\");\r\n    }\r\n  };\r\n\r\n  let body = {\r\n    userId,\r\n    health,\r\n    enemyDamage,\r\n  };\r\n\r\n  let attackData = {\r\n    enemyID,\r\n    enemyHealth,\r\n    damage,\r\n  };\r\n\r\n  const beginAttack = () => {\r\n    dispatch(attack(body));\r\n    dispatch(updateEnemyHealth(attackData));\r\n    if (enemyHealth <= 0) {\r\n      let battleStatBody = {\r\n        enemyID,\r\n        userId,\r\n      }\r\n      dispatch(wonBattle(battleStatBody));\r\n      \r\n      \r\n      Swal.fire({\r\n        title: \"You won hero!\",\r\n        text: `${enemyName} was killed`,\r\n        confirmButtonText: '<i class=\"fa fa-thumbs-up\"></i> Go back to town!',\r\n        imageUrl: \"https://unsplash.it/400/200\",\r\n        imageWidth: 400,\r\n        imageHeight: 200,\r\n        imageAlt: \"Custom image\",\r\n      }).then((result) => {\r\n        if (result.isConfirmed) {\r\n        \r\n          router.reload();\r\n        }\r\n      });\r\n    } else if (health <= 0) {\r\n      console.log(health, 'userHealth')\r\n      Swal.fire({\r\n        title: \"You are dead heroe!\",\r\n        text: `${email}, was brutaly wounded and got into hospital`,\r\n        confirmButtonText: '<i class=\"fa fa-thumbs-up\"></i> Go back to town!',\r\n        imageUrl: \"https://unsplash.it/400/200\",\r\n        imageWidth: 400,\r\n        imageHeight: 200,\r\n        imageAlt: \"Custom image\",\r\n      }).then((result) => {\r\n        if (result.isConfirmed) {\r\n          router.reload();\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navigation />\r\n      <StatsTable />\r\n      {isSpawned ? (\r\n        <button onClick={() => beginAttack()}>Attack!</button>\r\n      ) : null}\r\n      <button onClick={() => spawnEnemyClick()}>Find an enemy!</button>\r\n\r\n      <div className={classes.EnemyBox}>\r\n        <div>\r\n          <h2>Enemy table </h2>\r\n          <h5>name: {enemyName}</h5>\r\n          <h5>Health:{enemyHealth <= 0 ? 0 : enemyHealth} </h5>\r\n          <h5>Damage: {enemyDamage}</h5>\r\n        </div>\r\n        <div>\r\n          {enemyName === \"Goblin\" ? (\r\n            <img src={GoblinImg} alt=\"Goblin\" />\r\n          ) : (\r\n            <img src={OrcImg} alt=\"Orc\" />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Arena;\r\n"]},"metadata":{},"sourceType":"module"}